@page "/modal"

@using System.Timers
@using System.Threading.Tasks

<button class="btn btn-primary" @onclick="@(() => { showModal = true; })">Событие @CallEventOfModal</button>
@if (showModal)
{
<div class="modal fade show" tabindex="-1" role="dialog" style="display: block;">
    <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-body">
                <h1>Вы уверены? @FirstModalBody</h1>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="DoConfirmation">Да</button>
                    @if (showInfoModal && StatusOfOperation == false)
                {
                    showModal = false;

                    <div class="modal fade show" tabindex="-1" role="dialog" style="display: block;">
                        <div class="modal-dialog modal-dialog-centered" role="document">
                            <div class="modal-content">
                                <div class="modal-body">
                                    <h1>
                                        <img width="110" src="/css/Images/Check.svg" alt="icon of Check">OK @SecondtModalBody
                                    </h1>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                    <button type="button" class="btn btn-secondary" @onclick="DoСancellation">Нет</button>
                    @if (showInfoModal && StatusOfOperation == true)
                {
                    showModal = false;

                    <div class="modal fade show" tabindex="-1" role="dialog" style="display: block;">
                        <div class="modal-dialog modal-dialog-centered" role="document">
                            <div class="modal-content">
                                <div class="modal-body">
                                    <h1>
                                        <img width="110" src="/css/Images/Remove.svg" alt="icon of Check">Отмена @SecondtModalBody
                                    </h1>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public string CallEventOfModal { get; set; }
    [Parameter] public string FirstModalBody { get; set; }
    [Parameter] public string SecondtModalBody { get; set; }

    private bool showModal;
    private bool showInfoModal;
    private bool StatusOfOperation;
    private Timer _timer;

    protected override void OnInitialized()
    {
        showModal = false;
        showInfoModal = false;
        _timer = new Timer();
        _timer.Interval = 2000;
        _timer.Elapsed += StopShowing;
    }

    private void DoConfirmation()
    {
        showInfoModal = true;
        StatusOfOperation = false;
        _timer.Start();
    }

    private void DoСancellation()
    {
        showInfoModal = true;
        StatusOfOperation = true;
        _timer.Start();
    }

    private void StopShowing(object sender, ElapsedEventArgs args)
    {
        showModal = false;
        showInfoModal = false;
        InvokeAsync(StateHasChanged);
        _timer.Stop();
    }
}