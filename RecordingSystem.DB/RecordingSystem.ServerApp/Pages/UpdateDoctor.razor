@page "/update-doctor/{Id:int}"
@inject NavigationManager Navigator


<h3>UpdateDoctor</h3>

<div>
	@if (_doctor.Name != "")
	{
		<span>Имя:</span><input type="text" @bind="_doctor.Name"/> <br />
	}
	else
	{
		<span>Имя:</span><input style="border-color: red" type="text" @bind="_doctor.Name"/> <br />
	}
	@if (_doctor.LastName != "")
	{
		<span>Фамилия:</span><input type="text" @bind="_doctor.LastName"/> <br />
	}
	else
	{
		<span>Фамилия</span><input style="border-color: red" type="text" @bind="_doctor.LastName"/> <br />
	}
	<span>Пол</span><select  class="doctor-update-select" @bind="Male">
			<option value="true">Мужчина</option>
			<option value="false">Женщина</option>
	</select><br />
	<span>Специализация:</span><select  class="doctor-update-select" @bind="SpecId">
		<option value is null></option>
		@foreach (var a in Specializations)
		{
			<option value="@a.Id">@a.Name</option>
		}
		</select>
		@if (SpecId is null)
		{
			<span style="color: red">Нет специализации</span>
		}
	<br />
	
	<span>Кабинет:</span><select class="doctor-update-select" @bind="CabId">
		<option value is null> </option>
		@foreach( var a in Cabinets )
		{
			<option value="@a.Id">@a.Number</option>
		}
		</select>
		@if(CabId is null)
		{
			<span style="color: red">Нет кабинета</span>
		}
	<br />
	<span>Телефон:</span>
    @if (_doctor.PhoneNumber is null || _doctor.PhoneNumber == "")
    {
        <input type="number" placeholder="8-999-123-45-67" @bind="_doctor.PhoneNumber" required/>
    }
    else if (_doctor.PhoneNumber.Length == 11)
    {
		@if (Convert.ToInt64(_doctor.PhoneNumber) > 80000000000 & Convert.ToInt64(_doctor.PhoneNumber) < 90000000000)
		{
		    <input type="number" @bind="_doctor.PhoneNumber"/>
		}
		else
		{
		    <input class="input-red" type="number" placeholder="8-999-123-45-67" @bind="_doctor.PhoneNumber"/> <span class="doctor-proverka">Некорректные данные</span>
		}
	}
	else
		{
		    <input class="input-red" type="number" placeholder="8-999-123-45-67" @bind="_doctor.PhoneNumber"/> <span class="doctor-proverka">Некорректные данные</span>
		}
	<br />
	<span>Почта:</span><input placeholder="default@example.com" type="email" @bind="_doctor.Email" /> <br />
	<span>День рождения:</span><input type="date" @bind="_doctor.Birthday"/> <br />
	
	@if (_doctor.Name != "" && _doctor.LastName != "" && _doctor.Birthday is not null)
	{
		if (_doctor.PhoneNumber is not null && _doctor.PhoneNumber != "")
		{
			if(_doctor.PhoneNumber.Length == 11)
			{
				if (Convert.ToInt64(_doctor.PhoneNumber) > 80000000000 & Convert.ToInt64(_doctor.PhoneNumber) < 90000000000)
				{
					<button @onclick="EditDoctor">Сохранить изменения</button> <br />
				}
				else
				{
					<span class="doctor-proverka">ИСПРАВЬТЕ НОМЕР ТЕЛЕФОНА</span> <br />
				}
			}
			else
			{
				<span class="doctor-proverka">ИСПРАВЬТЕ НОМЕР ТЕЛЕФОНА</span> <br />
			}
		}
		else
		{
			<button @onclick="EditDoctor">Сохранить изменения</button> <br />
		}
	}
	else
	{
		<div class="doctor-proverka">ЗАПОЛНИТЕ ДАННЫЕ</div> <br />
	}
	
	<NavLink href="/Doctors"><span class="back">Назад</span></NavLink>
</div>

@code {
	[Parameter] public int Id { get; set; }

	private DoctorOutputModel _doctor;

	public List<SpecializationOutputModel> Specializations;

	public List<CabinetOutputModel> Cabinets;

	public string Male;
	public int? SpecId;
	public int? CabId;

	protected override void OnInitialized()
	{
		var doctors = new DoctorManager().GetAllDoctors();
		var index = IndexDoctorByListDoctors(doctors);
		_doctor = doctors[index];
		Specializations = new SpecializationManager().GetAllSpecializations();
		Cabinets = new CabinetManager().GetAllCabinets();
		if (_doctor.Male)
			Male = "true";
		else
			Male = "false";
		if (_doctor.Cabinet is null)
			CabId = null;
		else
			CabId = _doctor.Cabinet.Id;
		if (_doctor.Specialization is null)
			SpecId = null;
		else
			SpecId = _doctor.Specialization.Id;
	}

	private void EditDoctor()
	{
		_doctor.Male = Convert.ToBoolean(Male);
		if (_doctor.PhoneNumber == "")
			_doctor.PhoneNumber = null;
		if (_doctor.Email == "")
			_doctor.Email = null;
		var doc = new DoctorInputModel()
			{
				Id = _doctor.Id,
				Name = _doctor.Name,
				LastName = _doctor.LastName,
				Male = _doctor.Male,
				PhoneNumber = _doctor.PhoneNumber,
				Email = _doctor.Email,
				SpecializationId = SpecId,
				CabinetId = CabId,
				Birthday = _doctor.Birthday
			};
		new DoctorManager().UpdateDoctor(doc);
		Navigator.NavigateTo("/Doctors", true);
	}

	private int IndexDoctorByListDoctors(List<DoctorOutputModel> doctors)
	{
		int index = 0;
		int counter = -1;
		foreach (var i in doctors)
		{
			counter++;
			if (i.Id == Id)
			{
				index = counter;
			}
		}
		return index;
	}
}
