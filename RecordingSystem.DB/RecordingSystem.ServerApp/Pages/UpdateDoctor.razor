@page "/update-doctor/{Id:int}"
@inject NavigationManager Navigator


<h3>UpdateDoctor</h3>

<div>
	<span>Имя:</span><input type="text" @bind="_doctor.Name"/> <br />
	<span>Фамилия:</span><input type="text" @bind="_doctor.LastName"/> <br />
	<span>Пол</span><select  class="doctor-update-select" @bind="Male1">
			<option value is null></option>
			<option value="true">Мужчина</option>
			<option value="false">Женщина</option>
	</select><br />
	<span>Специализация:</span><select  class="doctor-update-select" @bind="_doctor.Specialization.Id">
		@foreach (var a in Specializations)
		{
			<option value="@a.Id">@a.Name</option>
		}
	</select><br />
	@if(_doctor.Cabinet is not null){
	<span>Кабинет:</span><select class="doctor-update-select" @bind="_doctor.Cabinet.Id">
		<option value is null> </option>
		@foreach( var a in Cabinets )
		{
			<option value="@a.Id">@a.Number</option>
		}
		</select><br />
	}
	else{
		var cabinet = new CabinetOutputModel() { Id = null , Number = null};
		_doctor.Cabinet = cabinet;
		<span>Кабинет:</span>

		<select class="doctor-update-select" @bind="_doctor.Cabinet.Id">
			<option value is null> </option>
			@foreach (var a in Cabinets)
			{
			<option value="@a.Id">@a.Number</option>
			}
		</select>
			<span style="color: red">Нет кабинета</span>
		<br />
	}
	<span>Телефон:</span><input type="tel" placeholder="8-999-123-45-67" @bind="_doctor.PhoneNumber"/> <br />
	<span>Почта:</span><input placeholder="default@example.com" type="email" @bind="_doctor.Email" /> <br />
	<span>День рождения:</span><input type="date" @bind="_doctor.Birthday"/> <br />
	<button @onclick="EditDoctor">Сохранить изменения</button> <br />
	<NavLink href="/Doctors"><div class="back">Назад</div></NavLink>
</div>

@code {
	[Parameter] public int Id { get; set; }

	private DoctorOutputModel _doctor;

	public List<SpecializationOutputModel> Specializations;

	public List<CabinetOutputModel> Cabinets;

	public string Male1;

	protected override void OnInitialized()
	{
		var doctors = new DoctorManager().GetAllDoctors();
		var index = IndexDoctorByListDoctors(doctors);
		_doctor = doctors[index];
		Specializations = new SpecializationManager().GetAllSpecializations();
		Cabinets = new CabinetManager().GetAllCabinets();
		if (_doctor.Male)
		Male1 = "true";
		else
		Male1 = "false";
	}

	private void EditDoctor()
	{
		_doctor.Male = Convert.ToBoolean(Male1);
		var doc = new DoctorInputModel()
			{
				Id = _doctor.Id,
				Name = _doctor.Name,
				LastName = _doctor.LastName,
				Male = _doctor.Male,
				PhoneNumber = _doctor.PhoneNumber,
				Email = _doctor.Email,
				SpecializationId = _doctor.Specialization.Id,
				CabinetId = _doctor.Cabinet.Id,
				Birthday = _doctor.Birthday
			};
		new DoctorManager().UpdateDoctor(doc);
		Navigator.NavigateTo("/Doctors", true);
	}

	private int IndexDoctorByListDoctors(List<DoctorOutputModel> doctors)
	{
		int index = 0;
		int counter = -1;
		foreach (var i in doctors)
		{
			counter++;
			if (i.Id == Id)
			{
				index = counter;
			}
		}
		return index;
	}
}
