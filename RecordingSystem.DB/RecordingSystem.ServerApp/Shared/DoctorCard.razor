@inject NavigationManager Navigator

<div class="doctor-card">
    @if (doctor.Male == true)
    {
      <div class="doctor-pic">
      <img class="photo-doctor" src="/css/Images/Male/{True}.png" alt="photo" />
      </div>
    }
    else
    {
      <div class="doctor-pic">
      <img  class="photo-doctor" src="/css/Images/Male/{False}.png" alt="photo" />
      </div>
    }
    <div class="doctor-text-in-card">
    @if (doctor.Specialization is not null)
    {
       <h6>@doctor.Specialization.Name</h6>
    }
    else
    {
        <h6>Стажер</h6>
    }
    <h4>@doctor.LastName</h4>
    <h5>@doctor.Name</h5>
    <p>Почта: @doctor.Email</p>
    <p>Телефон: @doctor.PhoneNumber</p>
    </div>
    <div>
        <a href="/update-doctor/@doctor.Id">
            Изменить данные
        </a>
        <button @onclick="DeleteDoctor">Удалить</button> <br />
    </div>
    <div class="btn-zapis">
        <a href="/recording/@doctor.Id">
            Записаться
        </a>
    </div>
</div>

@code {
    [Parameter] public DoctorOutputModel doctor { get; set; }

    private void DeleteDoctor()
    {
        var doc = new DoctorInputModel()
            {
                Id = doctor.Id,
            };
        new DoctorManager().UpdateIsDeletedDoctorById(doc);
        Navigator.NavigateTo("/Doctors", true);
    }
}
